name: Solar System Workflow


on:
    workflow_dispatch: 
    push:
        branches:
            - main
            - 'feature/*'
env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}

 
jobs:
    Unit-Testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
         MONGO_URI_NP: 'mongodb://localhost:27017/superData'
         MONGO_NP_USERNAME: ${{ vars.MONGO_NP_USERNAME }}
         MONGO_NP_PASSWORD: ${{ secrets.MONGO_NP_PASSWORD}}       
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Nodejs Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: '18'
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
    

            - name: Install Dependecies
              run: npm install
              
            - name: Unit Testing
              id: nodejs-unittesting-step
              run: npm test 

            - name: Storing the Test Result using Artificat
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Result
                path: test-results.xml
    code-coverage:
        name: Code Coverage
        needs: Unit-Testing 
        container: 
            image: node:18
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            options: 
                --name mango
        env:
         MONGO_URI_NP: 'mongodb://mango:27017/superData'
         MONGO_NP_USERNAME: ${{ vars.MONGO_NP_USERNAME }}
         MONGO_NP_PASSWORD: ${{ secrets.MONGO_NP_PASSWORD}}             
            
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            # - name: Setup Nodejs Version - 18
            #   uses: actions/setup-node@v3
            #   with:
            #     node-version: '18'
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependecies
              run: npm install
              
            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Archive Test Coverage
              uses: actions/upload-artifact@v4
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5
    docker:
        name: Containerize the Application
        needs: [Unit-Testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4

          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: GHCR Login
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner}}
              password: ${{ secrets.GITHUB_TOKEN}}              

          - name: Docker Build
            uses: docker/build-push-action@v6
            with:
              context: .
              push: false
              tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          - name: Docker Image Testing
            run: |
              docker images
              docker run --name solar-system-app -d \
                 -p 3000:3000 \
                 -e MONGO_URI=$MONGO_URI \
                 -e MONGO_USERNAME=$MONGO_USERNAME \
                 -e MONGO_PASSWORD=$MONGO_PASSWORD \
                 ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

              export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live

          - name: Container Registry Push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: True
              tags: |
                ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
                ghcr.io/${{ github.repository_owner}}/solar-system:${{github.sha}}
    dev-deploy:
        permissions: 
          id-token: write
          contents: write
        needs: docker
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            - name: Install Kubectl
              uses: azure/setup-kubectl@v4
              with:
                version: 'v1.31.8'
            - uses: azure/login@v2
              with:
                 client-id: ${{ secrets.AZURE_CLIENT_ID }}
                 tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                 subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
            - uses: azure/aks-set-context@v4
              with:
                 resource-group: ${{ vars.RG_NAME}}
                 cluster-name: ${{vars.CLUSTER_NAME}}             
            - name: Fetch Kubernetes Cluster Details
              run: |
                 kubectl version
                 echo -----------------------------------------
                 kubectl get nodes
            - name: Save the Ingress IP as Env variable
              run: |
               echo "INGRESS_IP=$(kubectl get services -n ingress-nginx nginx-ingress-ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].ip}")" >> $GITHUB_ENV
            - name: Replace Tokens in Manifest files
              uses: cschleiden/replace-tokens@v1
              with:
                tokenPrefix: '_{_'
                tokenSuffix: '_}_'
                files: '["kubernetes/development/*.yaml"]'
              env:
                NAMESPACE: ${{ vars.NAMESPACE}}
                REPLICAS: ${{ vars.REPLICAS}}
                IMAGE: ghcr.io/${{ github.repository_owner}}/solar-system:${{github.sha}}
                INGRESS_IP: ${{env.INGRESS_IP}}

            - name: Check Files
              run: |
               cat kubernetes/development/*.yaml
             
            - name: Create MangoDB Secret.
              run: | 
               kubectl create ns ${{vars.NAMESPACE}}
               kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
               --from-literal=MONGO_URI=${{ vars.MONGO_URI }} \
               --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
               --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD}} \
               --save-config \
               --dry-run=client \
               -o yaml | kubectl apply -f -

            - name: Deploy to DEV NAMSPACE oF CLUSTER
              run: | 
               kubectl apply -f kubernetes/development   