name: Solar System Workflow

on:
    workflow_dispatch: 
    push:
        branches:
            - main
            - 'feature/*'
env:
  MONGO_URI: ${{ vars.MONGO_URI }}
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}    
  
jobs:
    Unit-Testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Nodejs Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: '18'
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
    

            - name: Install Dependecies
              run: npm install
              
            - name: Unit Testing
              id: nodejs-unittesting-step
              run: npm test 

            - name: Storing the Test Result using Artificat
              if: always()
              uses: actions/upload-artifact@v4
              with:
                name: Mocha-Test-Result
                path: test-results.xml
    code-coverage:
        name: Code Coverage
        needs: Unit-Testing 
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4

            - name: Setup Nodejs Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: '18'
            - name: Cache NPM dependencies
              uses: actions/cache@v4
              with:
                path: node_modules
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependecies
              run: npm install
              
            - name: Check Code Coverage
              continue-on-error: true
              run: npm run coverage

            - name: Archive Test Coverage
              uses: actions/upload-artifact@v4
              with:
                name: Code-Coverage-Result
                path: coverage
                retention-days: 5
    docker:
        name: Containerize the Application
        needs: [Unit-Testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Build and push
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          - name: Docker Image Testing
            run: |
              docker images
              docker run --name solar-system-app -d \
                 -p 3000:3000 \
                 -e MONGO_URI =  ${{ vars.MONGO_URI }} \
                 -e MONGO_USERNAME = ${{ vars.MONGO_USERNAME }} \
                 -e MONGO_PASSWORD = ${{ secrets.MONGO_PASSWORD}} \ 
                 ${{ vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
              export IP= $(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
              echo $IP

              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live